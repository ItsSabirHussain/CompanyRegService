{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Checkbox = _interopRequireDefault(require(\"@material-ui/core/Checkbox\"));\n\nvar _TableCell = _interopRequireDefault(require(\"@material-ui/core/TableCell\"));\n\nvar _TableRow = _interopRequireDefault(require(\"@material-ui/core/TableRow\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _Icon = _interopRequireDefault(require(\"@material-ui/core/Icon\"));\n\nvar _Tooltip = _interopRequireDefault(require(\"@material-ui/core/Tooltip\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\nvar MTableBodyRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(MTableBodyRow, _React$Component);\n\n  function MTableBodyRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MTableBodyRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(MTableBodyRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"rotateIconStyle\", function (isOpen) {\n      return {\n        transform: isOpen ? 'rotate(90deg)' : 'none'\n      };\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"getElementSize\", function () {\n      return _this.props.options.padding === 'default' ? 'medium' : 'small';\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MTableBodyRow, [{\n    key: \"renderColumns\",\n    value: function renderColumns() {\n      var _this2 = this;\n\n      var size = this.getElementSize();\n      var mapArr = this.props.columns.filter(function (columnDef) {\n        return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);\n      }).sort(function (a, b) {\n        return a.tableData.columnOrder - b.tableData.columnOrder;\n      }).map(function (columnDef, index) {\n        var value = _this2.props.getFieldValue(_this2.props.data, columnDef);\n\n        return React.createElement(_this2.props.components.Cell, {\n          size: size,\n          icons: _this2.props.icons,\n          columnDef: columnDef,\n          value: value,\n          key: \"cell-\" + _this2.props.data.tableData.id + \"-\" + columnDef.tableData.id,\n          rowData: _this2.props.data\n        });\n      });\n      return mapArr;\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this3 = this;\n\n      var size = this.getElementSize();\n      var baseIconSize = size === 'medium' ? 42 : 26;\n      var actions = this.props.actions.filter(function (a) {\n        return !a.isFreeAction && !_this3.props.options.selection;\n      });\n      return React.createElement(_TableCell[\"default\"], {\n        size: size,\n        padding: \"none\",\n        key: \"key-actions-column\",\n        style: (0, _objectSpread2[\"default\"])({\n          width: baseIconSize * actions.length,\n          padding: '0px 5px'\n        }, this.props.options.actionsCellStyle)\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(this.props.components.Actions, {\n        data: this.props.data,\n        actions: actions,\n        components: this.props.components,\n        size: size\n      })));\n    }\n  }, {\n    key: \"renderSelectionColumn\",\n    value: function renderSelectionColumn() {\n      var _this4 = this;\n\n      var checkboxProps = this.props.options.selectionProps || {};\n\n      if (typeof checkboxProps === 'function') {\n        checkboxProps = checkboxProps(this.props.data);\n      }\n\n      var size = this.getElementSize();\n      var baseIconSize = size === 'medium' ? 42 : 26;\n      var styles = size === 'medium' ? {\n        marginLeft: this.props.level * 9\n      } : {\n        padding: \"4px\",\n        marginLeft: 5 + this.props.level * 9\n      };\n      return React.createElement(_TableCell[\"default\"], {\n        size: this.getElementSize(),\n        padding: \"none\",\n        key: \"key-selection-column\",\n        style: {\n          width: baseIconSize + 9 * (this.props.treeDataMaxLevel - 1)\n        }\n      }, React.createElement(_Checkbox[\"default\"], (0, _extends2[\"default\"])({\n        size: size,\n        checked: this.props.data.tableData.checked === true,\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        value: this.props.data.tableData.id.toString(),\n        onChange: function onChange(event) {\n          return _this4.props.onRowSelected(event, _this4.props.path, _this4.props.data);\n        },\n        style: styles\n      }, checkboxProps)));\n    }\n  }, {\n    key: \"renderDetailPanelColumn\",\n    value: function renderDetailPanelColumn() {\n      var _this5 = this;\n\n      var CustomIcon = function CustomIcon(_ref) {\n        var icon = _ref.icon,\n            style = _ref.style;\n        return typeof icon === \"string\" ? React.createElement(_Icon[\"default\"], {\n          style: style\n        }, icon) : React.createElement(icon, {\n          style: style\n        });\n      };\n\n      if (typeof this.props.detailPanel == 'function') {\n        return React.createElement(_TableCell[\"default\"], {\n          size: this.getElementSize(),\n          padding: \"none\",\n          key: \"key-detail-panel-column\",\n          style: {\n            width: 42,\n            textAlign: 'center'\n          }\n        }, React.createElement(_IconButton[\"default\"], {\n          size: this.getElementSize(),\n          style: (0, _objectSpread2[\"default\"])({\n            transition: 'all ease 200ms'\n          }, this.rotateIconStyle(this.props.data.tableData.showDetailPanel)),\n          onClick: function onClick(event) {\n            _this5.props.onToggleDetailPanel(_this5.props.path, _this5.props.detailPanel);\n\n            event.stopPropagation();\n          }\n        }, React.createElement(this.props.icons.DetailPanel, null)));\n      } else {\n        return React.createElement(_TableCell[\"default\"], {\n          size: this.getElementSize(),\n          padding: \"none\",\n          key: \"key-detail-panel-column\"\n        }, React.createElement(\"div\", {\n          style: {\n            width: 42 * this.props.detailPanel.length,\n            textAlign: 'center',\n            display: 'flex'\n          }\n        }, this.props.detailPanel.map(function (panel, index) {\n          if (typeof panel === \"function\") {\n            panel = panel(_this5.props.data);\n          }\n\n          var isOpen = (_this5.props.data.tableData.showDetailPanel || '').toString() === panel.render.toString();\n          var iconButton = React.createElement(_this5.props.icons.DetailPanel, null);\n          var animation = true;\n\n          if (isOpen) {\n            if (panel.openIcon) {\n              iconButton = React.createElement(CustomIcon, {\n                icon: panel.openIcon\n              });\n              animation = false;\n            } else if (panel.icon) {\n              iconButton = React.createElement(CustomIcon, {\n                icon: panel.icon\n              });\n            }\n          } else if (panel.icon) {\n            iconButton = React.createElement(CustomIcon, {\n              icon: panel.icon\n            });\n            animation = false;\n          }\n\n          iconButton = React.createElement(_IconButton[\"default\"], {\n            size: _this5.getElementSize(),\n            key: \"key-detail-panel-\" + index,\n            style: (0, _objectSpread2[\"default\"])({\n              transition: 'all ease 200ms'\n            }, _this5.rotateIconStyle(animation && isOpen)),\n            disabled: panel.disabled,\n            onClick: function onClick(event) {\n              _this5.props.onToggleDetailPanel(_this5.props.path, panel.render);\n\n              event.stopPropagation();\n            }\n          }, iconButton);\n\n          if (panel.tooltip) {\n            iconButton = React.createElement(_Tooltip[\"default\"], {\n              key: \"key-detail-panel-\" + index,\n              title: panel.tooltip\n            }, iconButton);\n          }\n\n          return iconButton;\n        })));\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, level) {\n      var style = {\n        transition: 'all ease 300ms'\n      };\n\n      if (typeof this.props.options.rowStyle === \"function\") {\n        style = (0, _objectSpread2[\"default\"])({}, style, this.props.options.rowStyle(this.props.data, index, level));\n      } else if (this.props.options.rowStyle) {\n        style = (0, _objectSpread2[\"default\"])({}, style, this.props.options.rowStyle);\n      }\n\n      if (this.props.onRowClick) {\n        style.cursor = 'pointer';\n      }\n\n      if (this.props.hasAnyEditingRow) {\n        style.opacity = 0.2;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var renderColumns = this.renderColumns();\n\n      if (this.props.options.selection) {\n        renderColumns.splice(0, 0, this.renderSelectionColumn());\n      }\n\n      if (this.props.actions && this.props.actions.filter(function (a) {\n        return !a.isFreeAction && !_this6.props.options.selection;\n      }).length > 0) {\n        if (this.props.options.actionsColumnIndex === -1) {\n          renderColumns.push(this.renderActions());\n        } else if (this.props.options.actionsColumnIndex >= 0) {\n          var endPos = 0;\n\n          if (this.props.options.selection) {\n            endPos = 1;\n          }\n\n          renderColumns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\n        }\n      }\n\n      if (this.props.isTreeData) {\n        if (this.props.data.tableData.childRows && this.props.data.tableData.childRows.length > 0) {\n          renderColumns.splice(0, 0, React.createElement(_TableCell[\"default\"], {\n            size: this.getElementSize(),\n            padding: \"none\",\n            key: \"key-tree-data-column\",\n            style: {\n              width: 48 + 9 * (this.props.treeDataMaxLevel - 2)\n            }\n          }, React.createElement(_IconButton[\"default\"], {\n            size: this.getElementSize(),\n            style: (0, _objectSpread2[\"default\"])({\n              transition: 'all ease 200ms',\n              marginLeft: this.props.level * 9\n            }, this.rotateIconStyle(this.props.data.tableData.isTreeExpanded)),\n            onClick: function onClick(event) {\n              _this6.props.onTreeExpandChanged(_this6.props.path, _this6.props.data);\n\n              event.stopPropagation();\n            }\n          }, React.createElement(this.props.icons.DetailPanel, null))));\n        } else {\n          renderColumns.splice(0, 0, React.createElement(_TableCell[\"default\"], {\n            padding: \"none\",\n            key: \"key-tree-data-column\"\n          }));\n        }\n      } // Lastly we add detail panel icon\n\n\n      if (this.props.detailPanel) {\n        if (this.props.options.detailPanelColumnAlignment === 'right') {\n          renderColumns.push(this.renderDetailPanelColumn());\n        } else {\n          renderColumns.splice(0, 0, this.renderDetailPanelColumn());\n        }\n      }\n\n      this.props.columns.filter(function (columnDef) {\n        return columnDef.tableData.groupOrder > -1;\n      }).forEach(function (columnDef) {\n        renderColumns.splice(0, 0, React.createElement(_TableCell[\"default\"], {\n          size: _this6.getElementSize(),\n          padding: \"none\",\n          key: \"key-group-cell\" + columnDef.tableData.id\n        }));\n      });\n      var _this$props = this.props,\n          icons = _this$props.icons,\n          data = _this$props.data,\n          columns = _this$props.columns,\n          components = _this$props.components,\n          detailPanel = _this$props.detailPanel,\n          getFieldValue = _this$props.getFieldValue,\n          isTreeData = _this$props.isTreeData,\n          onRowClick = _this$props.onRowClick,\n          onRowSelected = _this$props.onRowSelected,\n          onTreeExpandChanged = _this$props.onTreeExpandChanged,\n          onToggleDetailPanel = _this$props.onToggleDetailPanel,\n          onEditingCanceled = _this$props.onEditingCanceled,\n          onEditingApproved = _this$props.onEditingApproved,\n          options = _this$props.options,\n          hasAnyEditingRow = _this$props.hasAnyEditingRow,\n          treeDataMaxLevel = _this$props.treeDataMaxLevel,\n          rowProps = (0, _objectWithoutProperties2[\"default\"])(_this$props, [\"icons\", \"data\", \"columns\", \"components\", \"detailPanel\", \"getFieldValue\", \"isTreeData\", \"onRowClick\", \"onRowSelected\", \"onTreeExpandChanged\", \"onToggleDetailPanel\", \"onEditingCanceled\", \"onEditingApproved\", \"options\", \"hasAnyEditingRow\", \"treeDataMaxLevel\"]);\n      return React.createElement(React.Fragment, null, React.createElement(_TableRow[\"default\"], (0, _extends2[\"default\"])({\n        selected: hasAnyEditingRow\n      }, rowProps, {\n        hover: onRowClick ? true : false,\n        style: this.getStyle(this.props.index, this.props.level),\n        onClick: function onClick(event) {\n          onRowClick && onRowClick(event, _this6.props.data, function (panelIndex) {\n            var panel = detailPanel;\n\n            if (Array.isArray(panel)) {\n              panel = panel[panelIndex || 0].render;\n            }\n\n            onToggleDetailPanel(_this6.props.path, panel);\n          });\n        }\n      }), renderColumns), this.props.data.tableData.childRows && this.props.data.tableData.isTreeExpanded && this.props.data.tableData.childRows.map(function (data, index) {\n        if (data.tableData.editing) {\n          return React.createElement(_this6.props.components.EditRow, {\n            columns: _this6.props.columns.filter(function (columnDef) {\n              return !columnDef.hidden;\n            }),\n            components: _this6.props.components,\n            data: data,\n            icons: _this6.props.icons,\n            localization: _this6.props.localization,\n            key: index,\n            mode: data.tableData.editing,\n            options: _this6.props.options,\n            isTreeData: _this6.props.isTreeData,\n            detailPanel: _this6.props.detailPanel,\n            onEditingCanceled: onEditingCanceled,\n            onEditingApproved: onEditingApproved\n          });\n        } else {\n          return React.createElement(_this6.props.components.Row, (0, _extends2[\"default\"])({}, _this6.props, {\n            data: data,\n            index: index,\n            key: index,\n            level: _this6.props.level + 1,\n            path: [].concat((0, _toConsumableArray2[\"default\"])(_this6.props.path), [index]),\n            onEditingCanceled: onEditingCanceled,\n            onEditingApproved: onEditingApproved,\n            hasAnyEditingRow: _this6.props.hasAnyEditingRow,\n            treeDataMaxLevel: treeDataMaxLevel\n          }));\n        }\n      }), this.props.data.tableData && this.props.data.tableData.showDetailPanel && React.createElement(_TableRow[\"default\"] // selected={this.props.index % 2 === 0}\n      , null, React.createElement(_TableCell[\"default\"], {\n        size: this.getElementSize(),\n        colSpan: renderColumns.length,\n        padding: \"none\"\n      }, this.props.data.tableData.showDetailPanel(this.props.data))));\n    }\n  }]);\n  return MTableBodyRow;\n}(React.Component);\n\nexports[\"default\"] = MTableBodyRow;\nMTableBodyRow.defaultProps = {\n  actions: [],\n  index: 0,\n  data: {},\n  options: {},\n  path: []\n};\nMTableBodyRow.propTypes = {\n  actions: _propTypes[\"default\"].array,\n  icons: _propTypes[\"default\"].any.isRequired,\n  index: _propTypes[\"default\"].number.isRequired,\n  data: _propTypes[\"default\"].object.isRequired,\n  detailPanel: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].func]))]),\n  hasAnyEditingRow: _propTypes[\"default\"].bool,\n  options: _propTypes[\"default\"].object.isRequired,\n  onRowSelected: _propTypes[\"default\"].func,\n  path: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].number),\n  treeDataMaxLevel: _propTypes[\"default\"].number,\n  getFieldValue: _propTypes[\"default\"].func.isRequired,\n  columns: _propTypes[\"default\"].array,\n  onToggleDetailPanel: _propTypes[\"default\"].func.isRequired,\n  onRowClick: _propTypes[\"default\"].func,\n  onEditingApproved: _propTypes[\"default\"].func,\n  onEditingCanceled: _propTypes[\"default\"].func\n};","map":null,"metadata":{},"sourceType":"script"}