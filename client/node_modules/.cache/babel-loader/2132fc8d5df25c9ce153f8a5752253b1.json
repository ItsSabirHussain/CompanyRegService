{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _TableCell = _interopRequireDefault(require(\"@material-ui/core/TableCell\"));\n\nvar _TableRow = _interopRequireDefault(require(\"@material-ui/core/TableRow\"));\n\nvar _TextField = _interopRequireDefault(require(\"@material-ui/core/TextField\"));\n\nvar _FormControl = _interopRequireDefault(require(\"@material-ui/core/FormControl\"));\n\nvar _Select = _interopRequireDefault(require(\"@material-ui/core/Select\"));\n\nvar _Input = _interopRequireDefault(require(\"@material-ui/core/Input\"));\n\nvar _InputLabel = _interopRequireDefault(require(\"@material-ui/core/InputLabel\"));\n\nvar _MenuItem = _interopRequireDefault(require(\"@material-ui/core/MenuItem\"));\n\nvar _Checkbox = _interopRequireDefault(require(\"@material-ui/core/Checkbox\"));\n\nvar _ListItemText = _interopRequireDefault(require(\"@material-ui/core/ListItemText\"));\n\nvar _InputAdornment = _interopRequireDefault(require(\"@material-ui/core/InputAdornment\"));\n\nvar _Icon = _interopRequireDefault(require(\"@material-ui/core/Icon\"));\n\nvar _Tooltip = _interopRequireDefault(require(\"@material-ui/core/Tooltip\"));\n\nvar _dateFns = _interopRequireDefault(require(\"@date-io/date-fns\"));\n\nvar _pickers = require(\"@material-ui/pickers\");\n/* eslint-disable no-unused-vars */\n\n\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nvar MTableFilterRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(MTableFilterRow, _React$Component);\n\n  function MTableFilterRow() {\n    var _getPrototypeOf2,\n        _this2 = this;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MTableFilterRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(MTableFilterRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"renderLookupFilter\", function (columnDef) {\n      return React.createElement(_FormControl[\"default\"], {\n        style: {\n          width: '100%'\n        }\n      }, React.createElement(_InputLabel[\"default\"], {\n        htmlFor: \"select-multiple-checkbox\"\n      }, columnDef.filterPlaceholder), React.createElement(_Select[\"default\"], {\n        multiple: true,\n        value: columnDef.tableData.filterValue || [],\n        onChange: function onChange(event) {\n          _this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\n        },\n        input: React.createElement(_Input[\"default\"], {\n          id: \"select-multiple-checkbox\"\n        }),\n        renderValue: function renderValue(selecteds) {\n          return selecteds.map(function (selected) {\n            return columnDef.lookup[selected];\n          }).join(', ');\n        },\n        MenuProps: MenuProps\n      }, Object.keys(columnDef.lookup).map(function (key) {\n        return React.createElement(_MenuItem[\"default\"], {\n          key: key,\n          value: key\n        }, React.createElement(_Checkbox[\"default\"], {\n          checked: columnDef.tableData.filterValue ? columnDef.tableData.filterValue.indexOf(key.toString()) > -1 : false\n        }), React.createElement(_ListItemText[\"default\"], {\n          primary: columnDef.lookup[key]\n        }));\n      })));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"renderBooleanFilter\", function (columnDef) {\n      return React.createElement(_Checkbox[\"default\"], {\n        indeterminate: columnDef.tableData.filterValue === undefined,\n        checked: columnDef.tableData.filterValue === 'checked',\n        onChange: function onChange() {\n          var val;\n\n          if (columnDef.tableData.filterValue === undefined) {\n            val = 'checked';\n          } else if (columnDef.tableData.filterValue === 'checked') {\n            val = 'unchecked';\n          }\n\n          _this.props.onFilterChanged(columnDef.tableData.id, val);\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"renderDefaultFilter\", function (columnDef) {\n      var localization = (0, _objectSpread2[\"default\"])({}, MTableFilterRow.defaultProps.localization, _this.props.localization);\n      return React.createElement(_TextField[\"default\"], {\n        style: columnDef.type === 'numeric' ? {\n          \"float\": 'right'\n        } : {},\n        type: columnDef.type === 'numeric' ? 'number' : 'text',\n        value: columnDef.tableData.filterValue || '',\n        placeholder: columnDef.filterPlaceholder || '',\n        onChange: function onChange(event) {\n          _this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\n        },\n        InputProps: {\n          startAdornment: React.createElement(_InputAdornment[\"default\"], {\n            position: \"start\"\n          }, React.createElement(_Tooltip[\"default\"], {\n            title: localization.filterTooltip\n          }, React.createElement(_this2.props.icons.Filter, null)))\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"renderDateTypeFilter\", function (columnDef) {\n      var dateInputElement = null;\n\n      var onDateInputChange = function onDateInputChange(date) {\n        return _this.props.onFilterChanged(columnDef.tableData.id, date);\n      };\n\n      if (columnDef.type === 'date') {\n        dateInputElement = React.createElement(_pickers.DatePicker, {\n          value: columnDef.tableData.filterValue || null,\n          onChange: onDateInputChange,\n          clearable: true\n        });\n      } else if (columnDef.type === 'datetime') {\n        dateInputElement = React.createElement(_pickers.DateTimePicker, {\n          value: columnDef.tableData.filterValue || null,\n          onChange: onDateInputChange,\n          clearable: true\n        });\n      } else if (columnDef.type === 'time') {\n        dateInputElement = React.createElement(_pickers.TimePicker, {\n          value: columnDef.tableData.filterValue || null,\n          onChange: onDateInputChange,\n          clearable: true\n        });\n      }\n\n      return React.createElement(_pickers.MuiPickersUtilsProvider, {\n        utils: _dateFns[\"default\"]\n      }, dateInputElement);\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MTableFilterRow, [{\n    key: \"getComponentForColumn\",\n    value: function getComponentForColumn(columnDef) {\n      if (columnDef.filtering === false) {\n        return null;\n      }\n\n      if (columnDef.field || columnDef.customFilterAndSearch) {\n        if (columnDef.lookup) {\n          return this.renderLookupFilter(columnDef);\n        } else if (columnDef.type === 'boolean') {\n          return this.renderBooleanFilter(columnDef);\n        } else if (['date', 'datetime', 'time'].includes(columnDef.type)) {\n          return this.renderDateTypeFilter(columnDef);\n        } else {\n          return this.renderDefaultFilter(columnDef);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var columns = this.props.columns.filter(function (columnDef) {\n        return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);\n      }).sort(function (a, b) {\n        return a.tableData.columnOrder - b.tableData.columnOrder;\n      }).map(function (columnDef) {\n        return React.createElement(_TableCell[\"default\"], {\n          key: columnDef.tableData.id,\n          style: (0, _objectSpread2[\"default\"])({}, _this3.props.filterCellStyle, columnDef.filterCellStyle)\n        }, _this3.getComponentForColumn(columnDef));\n      });\n\n      if (this.props.selection) {\n        columns.splice(0, 0, React.createElement(_TableCell[\"default\"], {\n          padding: \"none\",\n          key: \"key-selection-column\"\n        }));\n      }\n\n      if (this.props.emptyCell && this.props.hasActions) {\n        if (this.props.actionsColumnIndex === -1) {\n          columns.push(React.createElement(_TableCell[\"default\"], {\n            key: \"key-action-column\"\n          }));\n        } else {\n          var endPos = 0;\n\n          if (this.props.selection) {\n            endPos = 1;\n          }\n\n          columns.splice(this.props.actionsColumnIndex + endPos, 0, React.createElement(_TableCell[\"default\"], {\n            key: \"key-action-column\"\n          }));\n        }\n      }\n\n      if (this.props.hasDetailPanel) {\n        columns.splice(0, 0, React.createElement(_TableCell[\"default\"], {\n          padding: \"none\",\n          key: \"key-detail-panel-column\"\n        }));\n      }\n\n      if (this.props.isTreeData > 0) {\n        columns.splice(0, 0, React.createElement(_TableCell[\"default\"], {\n          padding: \"none\",\n          key: \"key-tree-data-filter\"\n        }));\n      }\n\n      this.props.columns.filter(function (columnDef) {\n        return columnDef.tableData.groupOrder > -1;\n      }).forEach(function (columnDef) {\n        columns.splice(0, 0, React.createElement(_TableCell[\"default\"], {\n          padding: \"checkbox\",\n          key: \"key-group-filter\" + columnDef.tableData.id\n        }));\n      });\n      return React.createElement(_TableRow[\"default\"], {\n        style: {\n          height: 10\n        }\n      }, columns);\n    }\n  }]);\n  return MTableFilterRow;\n}(React.Component);\n\nMTableFilterRow.defaultProps = {\n  emptyCell: false,\n  columns: [],\n  selection: false,\n  hasActions: false,\n  localization: {\n    filterTooltip: 'Filter'\n  }\n};\nMTableFilterRow.propTypes = {\n  emptyCell: _propTypes[\"default\"].bool,\n  columns: _propTypes[\"default\"].array.isRequired,\n  hasDetailPanel: _propTypes[\"default\"].bool.isRequired,\n  isTreeData: _propTypes[\"default\"].bool.isRequired,\n  onFilterChanged: _propTypes[\"default\"].func.isRequired,\n  filterCellStyle: _propTypes[\"default\"].object,\n  selection: _propTypes[\"default\"].bool.isRequired,\n  actionsColumnIndex: _propTypes[\"default\"].number,\n  hasActions: _propTypes[\"default\"].bool,\n  localization: _propTypes[\"default\"].object\n};\nvar _default = MTableFilterRow;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}