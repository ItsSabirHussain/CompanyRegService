{"ast":null,"code":"import _classCallCheck from \"/Users/sabirhussain/Desktop/AzeemDev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabirhussain/Desktop/AzeemDev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sabirhussain/Desktop/AzeemDev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sabirhussain/Desktop/AzeemDev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sabirhussain/Desktop/AzeemDev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sabirhussain/Desktop/AzeemDev/client/src/components/cuserdashboard/Upload.js\";\nimport React, { Component } from \"react\";\nimport \"./Upload.css\";\nimport axios from \"axios\";\nimport Dropzone from \"react-dropzone\";\nimport FileBox from \"./FileBox/FileBox\";\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Upload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      files: [],\n      description: \"\"\n    };\n\n    _this.descriptionChangedHandler = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.submitFilesHandler = function (event) {\n      event.target.value = \"Uploading...\";\n      event.preventDefault();\n      var headers = {\n        Type: \"formData\",\n        Authorization: _this.props.tokenProp,\n        UploadDescription: _this.state.description\n      };\n      var formData = new FormData();\n\n      _this.state.files.forEach(function (file) {\n        formData.append(\"files\", file);\n      });\n\n      axios.post(\"/files/upload\", formData, {\n        headers: headers\n      }).then(function (response) {\n        window.location.href = window.location.href + \"allfiles\";\n      }).catch(function (err) {\n        _this.props.logout();\n      });\n    };\n\n    _this.onDrop = function (files) {\n      _this.setState({\n        files: files\n      });\n    };\n\n    _this.onRemove = function (event, index) {\n      event.preventDefault();\n      event.stopPropagation(); //prevent clicking outer div\n\n      var tempFiles = _this.state.files.slice();\n\n      tempFiles.splice(index, 1);\n\n      _this.setState({\n        files: tempFiles\n      });\n    };\n\n    _this.fileInputChangedHandler = function (event) {\n      _this.setState({\n        files: event.target.files\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        overflowY: \"scroll\",\n        width: \"400px\"\n      };\n      return React.createElement(\"div\", {\n        className: \"upload-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitFilesHandler,\n        encType: \"multipart/form-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"upload-tbl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: this.onDrop.bind(this),\n        className: \"dropzone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.files.length === 0 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Try dropping some files here, or click to select files to upload.\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.files.map(function (f, index) {\n        return React.createElement(FileBox, {\n          key: f.name,\n          fileName: f.name,\n          size: f.size,\n          onRemove: _this2.onRemove,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      }))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        maxlength: \"30\",\n        placeholder: \"Describe your upload... (30 chars)\",\n        type: \"text\",\n        onChange: this.descriptionChangedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Upload!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Upload;\n}(Component);\n\nexport default Upload;","map":{"version":3,"sources":["/Users/sabirhussain/Desktop/AzeemDev/client/src/components/cuserdashboard/Upload.js"],"names":["React","Component","axios","Dropzone","FileBox","Upload","state","files","description","descriptionChangedHandler","event","setState","target","value","submitFilesHandler","preventDefault","headers","Type","Authorization","props","tokenProp","UploadDescription","formData","FormData","forEach","file","append","post","then","response","window","location","href","catch","err","logout","onDrop","onRemove","index","stopPropagation","tempFiles","slice","splice","fileInputChangedHandler","style","overflowY","width","bind","length","map","f","name","size"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Upload.css\";\nimport axios from \"axios\";\nimport Dropzone from \"react-dropzone\";\nimport FileBox from \"./FileBox/FileBox\";\n\nclass Upload extends Component {\n  state = {\n    files: [],\n    description: \"\"\n  };\n\n  descriptionChangedHandler = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  submitFilesHandler = event => {\n    event.target.value = \"Uploading...\";\n    event.preventDefault();\n\n    let headers = {\n      Type: \"formData\",\n      Authorization: this.props.tokenProp,\n      UploadDescription: this.state.description\n    };\n\n    let formData = new FormData();\n    this.state.files.forEach(file => {\n      formData.append(\"files\", file);\n    });\n    axios\n      .post(\"/files/upload\", formData, { headers: headers })\n      .then(response => {\n        window.location.href = window.location.href + \"allfiles\";\n      })\n      .catch(err => {\n        this.props.logout();\n      });\n  };\n\n  /**On adding a file */\n  onDrop = files => {\n    this.setState({ files: files });\n  };\n\n  onRemove = (event, index) => {\n    event.preventDefault();\n    event.stopPropagation(); //prevent clicking outer div\n    let tempFiles = this.state.files.slice();\n    tempFiles.splice(index, 1);\n    this.setState({ files: tempFiles });\n  };\n\n  fileInputChangedHandler = event => {\n    this.setState({ files: event.target.files });\n  };\n\n  render() {\n    const style = {\n      overflowY: \"scroll\",\n      width: \"400px\"\n    };\n\n    return (\n      <div className=\"upload-form\">\n        <form onSubmit={this.submitFilesHandler} encType=\"multipart/form-data\">\n          <table className=\"upload-tbl\">\n            <tbody>\n              <tr>\n                <th></th>\n                <td>\n                  <Dropzone\n                    onDrop={this.onDrop.bind(this)}\n                    className=\"dropzone\"\n                  >\n                    {this.state.files.length === 0 ? (\n                      <p>\n                        Try dropping some files here, or click to select files\n                        to upload.\n                      </p>\n                    ) : (\n                      <div>\n                        {this.state.files.map((f, index) => (\n                          <FileBox\n                            key={f.name}\n                            fileName={f.name}\n                            size={f.size}\n                            onRemove={this.onRemove}\n                            index={index}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </Dropzone>\n                </td>\n              </tr>\n              <tr>\n                <th></th>\n                <td>\n                  <input\n                    maxlength=\"30\"\n                    placeholder=\"Describe your upload... (30 chars)\"\n                    type=\"text\"\n                    onChange={this.descriptionChangedHandler}\n                  ></input>\n                </td>\n              </tr>\n              <tr>\n                <th></th>\n                <td>\n                  <input type=\"submit\" value=\"Upload!\"></input>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}