{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Table = _interopRequireDefault(require(\"@material-ui/core/Table\"));\n\nvar _TableFooter = _interopRequireDefault(require(\"@material-ui/core/TableFooter\"));\n\nvar _TableRow = _interopRequireDefault(require(\"@material-ui/core/TableRow\"));\n\nvar _LinearProgress = _interopRequireDefault(require(\"@material-ui/core/LinearProgress\"));\n\nvar _reactDoubleScrollbar = _interopRequireDefault(require(\"react-double-scrollbar\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _components = require(\"./components\");\n\nvar _reactBeautifulDnd = require(\"react-beautiful-dnd\");\n\nvar _dataManager = _interopRequireDefault(require(\"./utils/data-manager\"));\n\nvar _debounce = require(\"debounce\");\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\nvar MaterialTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(MaterialTable, _React$Component);\n\n  function MaterialTable(_props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MaterialTable);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(MaterialTable).call(this, _props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"dataManager\", new _dataManager[\"default\"]());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"isRemoteData\", function (props) {\n      return !Array.isArray((props || _this.props).data);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onAllSelected\", function (checked) {\n      _this.dataManager.changeAllSelected(checked);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        return _this.onSelectionChange();\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeColumnHidden\", function (column, hidden) {\n      _this.dataManager.changeColumnHidden(column, hidden);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        _this.props.onChangeColumnHidden && _this.props.onChangeColumnHidden(column, hidden);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeGroupOrder\", function (groupedColumn) {\n      _this.dataManager.changeGroupOrder(groupedColumn.tableData.id);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeOrder\", function (orderBy, orderDirection) {\n      var newOrderBy = orderDirection === '' ? -1 : orderBy;\n\n      _this.dataManager.changeOrder(newOrderBy, orderDirection);\n\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = 0;\n        query.orderBy = _this.state.columns.find(function (a) {\n          return a.tableData.id === newOrderBy;\n        });\n        query.orderDirection = orderDirection;\n\n        _this.onQueryChange(query, function () {\n          _this.props.onOrderChange && _this.props.onOrderChange(newOrderBy, orderDirection);\n        });\n      } else {\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onOrderChange && _this.props.onOrderChange(newOrderBy, orderDirection);\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangePage\", function (event, page) {\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = page;\n\n        _this.onQueryChange(query, function () {\n          _this.props.onChangePage && _this.props.onChangePage(page);\n        });\n      } else {\n        _this.dataManager.changeCurrentPage(page);\n\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onChangePage && _this.props.onChangePage(page);\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeRowsPerPage\", function (event) {\n      var pageSize = event.target.value;\n\n      _this.dataManager.changePageSize(pageSize);\n\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.pageSize = event.target.value;\n        query.page = 0;\n\n        _this.onQueryChange(query, function () {\n          _this.props.onChangeRowsPerPage && _this.props.onChangeRowsPerPage(pageSize);\n        });\n      } else {\n        _this.dataManager.changeCurrentPage(0);\n\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onChangeRowsPerPage && _this.props.onChangeRowsPerPage(pageSize);\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onDragEnd\", function (result) {\n      _this.dataManager.changeByDrag(result);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        if (_this.props.onColumnDragged && result.destination.droppableId === \"headers\" && result.source.droppableId === \"headers\") {\n          _this.props.onColumnDragged(result.source.index, result.destination.index);\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onGroupExpandChanged\", function (path) {\n      _this.dataManager.changeGroupExpand(path);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onGroupRemoved\", function (groupedColumn, index) {\n      var result = {\n        combine: null,\n        destination: {\n          droppableId: \"headers\",\n          index: 0\n        },\n        draggableId: groupedColumn.tableData.id,\n        mode: \"FLUID\",\n        reason: \"DROP\",\n        source: {\n          index: index,\n          droppableId: \"groups\"\n        },\n        type: \"DEFAULT\"\n      };\n\n      _this.dataManager.changeByDrag(result);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        _this.props.onGroupRemoved && _this.props.onGroupRemoved(groupedColumn, index);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onEditingApproved\", function (mode, newData, oldData) {\n      if (mode === \"add\") {\n        _this.setState({\n          isLoading: true\n        }, function () {\n          _this.props.editable.onRowAdd(newData).then(function (result) {\n            _this.setState({\n              isLoading: false,\n              showAddRow: false\n            }, function () {\n              if (_this.isRemoteData()) {\n                _this.onQueryChange(_this.state.query);\n              }\n            });\n          })[\"catch\"](function (reason) {\n            _this.setState({\n              isLoading: false\n            });\n          });\n        });\n      } else if (mode === \"update\") {\n        _this.setState({\n          isLoading: true\n        }, function () {\n          _this.props.editable.onRowUpdate(newData, oldData).then(function (result) {\n            _this.dataManager.changeRowEditing(oldData);\n\n            _this.setState((0, _objectSpread2[\"default\"])({\n              isLoading: false\n            }, _this.dataManager.getRenderState()), function () {\n              if (_this.isRemoteData()) {\n                _this.onQueryChange(_this.state.query);\n              }\n            });\n          })[\"catch\"](function (reason) {\n            _this.setState({\n              isLoading: false\n            });\n          });\n        });\n      } else if (mode === \"delete\") {\n        _this.setState({\n          isLoading: true\n        }, function () {\n          _this.props.editable.onRowDelete(oldData).then(function (result) {\n            _this.dataManager.changeRowEditing(oldData);\n\n            _this.setState((0, _objectSpread2[\"default\"])({\n              isLoading: false\n            }, _this.dataManager.getRenderState()), function () {\n              if (_this.isRemoteData()) {\n                _this.onQueryChange(_this.state.query);\n              }\n            });\n          })[\"catch\"](function (reason) {\n            _this.setState({\n              isLoading: false\n            });\n          });\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onEditingCanceled\", function (mode, rowData) {\n      if (mode === \"add\") {\n        _this.setState({\n          showAddRow: false\n        });\n      } else if (mode === \"update\" || mode === \"delete\") {\n        _this.dataManager.changeRowEditing(rowData);\n\n        _this.setState(_this.dataManager.getRenderState());\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onQueryChange\", function (query, callback) {\n      query = (0, _objectSpread2[\"default\"])({}, _this.state.query, query);\n\n      _this.setState({\n        isLoading: true\n      }, function () {\n        _this.props.data(query).then(function (result) {\n          query.totalCount = result.totalCount;\n          query.page = result.page;\n\n          _this.dataManager.setData(result.data);\n\n          _this.setState((0, _objectSpread2[\"default\"])({\n            isLoading: false\n          }, _this.dataManager.getRenderState(), {\n            query: query\n          }), function () {\n            callback && callback();\n          });\n        });\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onRowSelected\", function (event, path, dataClicked) {\n      _this.dataManager.changeRowSelected(event.target.checked, path);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        return _this.onSelectionChange(dataClicked);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSelectionChange\", function (dataClicked) {\n      if (_this.props.onSelectionChange) {\n        var selectedRows = [];\n\n        var findSelecteds = function findSelecteds(list) {\n          list.forEach(function (row) {\n            if (row.tableData.checked) {\n              selectedRows.push(row);\n            }\n\n            row.tableData.childRows && findSelecteds(row.tableData.childRows);\n          });\n        };\n\n        findSelecteds(_this.state.originalData);\n\n        _this.props.onSelectionChange(selectedRows, dataClicked);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSearchChange\", function (searchText) {\n      return _this.setState({\n        searchText: searchText\n      }, _this.onSearchChangeDebounce);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSearchChangeDebounce\", (0, _debounce.debounce)(function () {\n      _this.dataManager.changeSearchText(_this.state.searchText);\n\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = 0;\n        query.search = _this.state.searchText;\n\n        _this.onQueryChange(query);\n      } else {\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onSearchChange && _this.props.onSearchChange(_this.state.searchText);\n        });\n      }\n    }, _this.props.options.debounceInterval));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onFilterChange\", function (columnId, value) {\n      _this.dataManager.changeFilterValue(columnId, value);\n\n      _this.setState({}, _this.onFilterChangeDebounce);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onFilterChangeDebounce\", (0, _debounce.debounce)(function () {\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = 0;\n        query.filters = _this.state.columns.filter(function (a) {\n          return a.tableData.filterValue;\n        }).map(function (a) {\n          return {\n            column: a,\n            operator: \"=\",\n            value: a.tableData.filterValue\n          };\n        });\n\n        _this.onQueryChange(query);\n      } else {\n        _this.setState(_this.dataManager.getRenderState());\n      }\n    }, _this.props.options.debounceInterval));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onTreeExpandChanged\", function (path, data) {\n      _this.dataManager.changeTreeExpand(path);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        _this.props.onTreeExpandChange && _this.props.onTreeExpandChange(data, data.tableData.isTreeExpanded);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onToggleDetailPanel\", function (path, render) {\n      _this.dataManager.changeDetailPanelVisibility(path, render);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n\n    var calculatedProps = _this.getProps(_props);\n\n    _this.setDataManagerFields(calculatedProps, true);\n\n    var renderState = _this.dataManager.getRenderState();\n\n    _this.state = (0, _objectSpread2[\"default\"])({\n      data: []\n    }, renderState, {\n      query: {\n        filters: renderState.columns.filter(function (a) {\n          return a.tableData.filterValue;\n        }).map(function (a) {\n          return {\n            column: a,\n            operator: \"=\",\n            value: a.tableData.filterValue\n          };\n        }),\n        orderBy: renderState.columns.find(function (a) {\n          return a.tableData.id === renderState.orderBy;\n        }),\n        orderDirection: renderState.orderDirection,\n        page: 0,\n        pageSize: calculatedProps.options.pageSize,\n        search: renderState.searchText,\n        totalCount: 0\n      },\n      showAddRow: false\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MaterialTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState(this.dataManager.getRenderState(), function () {\n        if (_this2.isRemoteData()) {\n          _this2.onQueryChange(_this2.state.query);\n        }\n      });\n    }\n  }, {\n    key: \"setDataManagerFields\",\n    value: function setDataManagerFields(props, isInit) {\n      var defaultSortColumnIndex = -1;\n      var defaultSortDirection = '';\n\n      if (props) {\n        defaultSortColumnIndex = props.columns.findIndex(function (a) {\n          return a.defaultSort;\n        });\n        defaultSortDirection = defaultSortColumnIndex > -1 ? props.columns[defaultSortColumnIndex].defaultSort : '';\n      }\n\n      this.dataManager.setColumns(props.columns);\n      this.dataManager.setDefaultExpanded(props.options.defaultExpanded);\n\n      if (this.isRemoteData(props)) {\n        this.dataManager.changeApplySearch(false);\n        this.dataManager.changeApplyFilters(false);\n      } else {\n        this.dataManager.changeApplySearch(true);\n        this.dataManager.changeApplyFilters(true);\n        this.dataManager.setData(props.data);\n      }\n\n      isInit && this.dataManager.changeOrder(defaultSortColumnIndex, defaultSortDirection);\n      isInit && this.dataManager.changeCurrentPage(props.options.initialPage ? props.options.initialPage : 0);\n      this.dataManager.changePageSize(props.options.pageSize);\n      isInit && this.dataManager.changePaging(props.options.paging);\n      isInit && this.dataManager.changeParentFunc(props.parentChildData);\n      this.dataManager.changeDetailPanelType(props.options.detailPanelType);\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var props = this.getProps(nextProps);\n      this.setDataManagerFields(props);\n      this.setState(this.dataManager.getRenderState());\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var count = this.isRemoteData() ? this.state.query.totalCount : this.state.data.length;\n      var currentPage = this.isRemoteData() ? this.state.query.page : this.state.currentPage;\n      var pageSize = this.isRemoteData() ? this.state.query.pageSize : this.state.pageSize;\n\n      if (count <= pageSize * currentPage && currentPage !== 0) {\n        this.onChangePage(null, Math.max(0, Math.ceil(count / pageSize) - 1));\n      }\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props) {\n      var _this3 = this;\n\n      var calculatedProps = (0, _objectSpread2[\"default\"])({}, props || this.props);\n      calculatedProps.components = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.components, calculatedProps.components);\n      calculatedProps.icons = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.icons, calculatedProps.icons);\n      calculatedProps.options = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.options, calculatedProps.options);\n      var localization = calculatedProps.localization.body;\n      calculatedProps.actions = (0, _toConsumableArray2[\"default\"])(calculatedProps.actions || []);\n\n      if (calculatedProps.editable) {\n        if (calculatedProps.editable.onRowAdd) {\n          calculatedProps.actions.push({\n            icon: calculatedProps.icons.Add,\n            tooltip: localization.addTooltip,\n            isFreeAction: true,\n            onClick: function onClick() {\n              _this3.dataManager.changeRowEditing();\n\n              _this3.setState((0, _objectSpread2[\"default\"])({}, _this3.dataManager.getRenderState(), {\n                showAddRow: !_this3.state.showAddRow\n              }));\n            }\n          });\n        }\n\n        if (calculatedProps.editable.onRowUpdate) {\n          calculatedProps.actions.push(function (rowData) {\n            return {\n              icon: calculatedProps.icons.Edit,\n              tooltip: localization.editTooltip,\n              disabled: calculatedProps.editable.isEditable && !calculatedProps.editable.isEditable(rowData),\n              onClick: function onClick(e, rowData) {\n                _this3.dataManager.changeRowEditing(rowData, \"update\");\n\n                _this3.setState((0, _objectSpread2[\"default\"])({}, _this3.dataManager.getRenderState(), {\n                  showAddRow: false\n                }));\n              }\n            };\n          });\n        }\n\n        if (calculatedProps.editable.onRowDelete) {\n          calculatedProps.actions.push(function (rowData) {\n            return {\n              icon: calculatedProps.icons.Delete,\n              tooltip: localization.deleteTooltip,\n              disabled: calculatedProps.editable.isDeletable && !calculatedProps.editable.isDeletable(rowData),\n              onClick: function onClick(e, rowData) {\n                _this3.dataManager.changeRowEditing(rowData, \"delete\");\n\n                _this3.setState((0, _objectSpread2[\"default\"])({}, _this3.dataManager.getRenderState(), {\n                  showAddRow: false\n                }));\n              }\n            };\n          });\n        }\n      }\n\n      return calculatedProps;\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var props = this.getProps();\n\n      if (props.options.paging) {\n        var localization = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.pagination, this.props.localization.pagination);\n        return React.createElement(_Table[\"default\"], null, React.createElement(_TableFooter[\"default\"], {\n          style: {\n            display: 'grid'\n          }\n        }, React.createElement(_TableRow[\"default\"], null, React.createElement(props.components.Pagination, {\n          classes: {\n            root: props.classes.paginationRoot,\n            toolbar: props.classes.paginationToolbar,\n            caption: props.classes.paginationCaption,\n            selectRoot: props.classes.paginationSelectRoot\n          },\n          style: {\n            \"float\": props.theme.direction === \"rtl\" ? \"\" : \"right\",\n            overflowX: 'auto'\n          },\n          colSpan: 3,\n          count: this.isRemoteData() ? this.state.query.totalCount : this.state.data.length,\n          icons: props.icons,\n          rowsPerPage: this.state.pageSize,\n          rowsPerPageOptions: props.options.pageSizeOptions,\n          SelectProps: {\n            renderValue: function renderValue(value) {\n              return React.createElement(\"div\", {\n                style: {\n                  padding: '0px 5px'\n                }\n              }, value + ' ' + localization.labelRowsSelect + ' ');\n            }\n          },\n          page: this.isRemoteData() ? this.state.query.page : this.state.currentPage,\n          onChangePage: this.onChangePage,\n          onChangeRowsPerPage: this.onChangeRowsPerPage,\n          ActionsComponent: function ActionsComponent(subProps) {\n            return props.options.paginationType === 'normal' ? React.createElement(_components.MTablePagination, (0, _extends2[\"default\"])({}, subProps, {\n              icons: props.icons,\n              localization: localization,\n              showFirstLastPageButtons: props.options.showFirstLastPageButtons\n            })) : React.createElement(_components.MTableSteppedPagination, (0, _extends2[\"default\"])({}, subProps, {\n              icons: props.icons,\n              localization: localization\n            }));\n          },\n          labelDisplayedRows: function labelDisplayedRows(row) {\n            return localization.labelDisplayedRows.replace('{from}', row.from).replace('{to}', row.to).replace('{count}', row.count);\n          },\n          labelRowsPerPage: localization.labelRowsPerPage\n        }))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var props = this.getProps();\n      return React.createElement(_reactBeautifulDnd.DragDropContext, {\n        onDragEnd: this.onDragEnd\n      }, React.createElement(props.components.Container, {\n        style: (0, _objectSpread2[\"default\"])({\n          position: 'relative'\n        }, props.style)\n      }, props.options.toolbar && React.createElement(props.components.Toolbar, {\n        actions: props.actions,\n        components: props.components,\n        selectedRows: this.state.selectedCount > 0 ? this.state.originalData.filter(function (a) {\n          return a.tableData.checked;\n        }) : [],\n        columns: this.state.columns,\n        columnsButton: props.options.columnsButton,\n        icons: props.icons,\n        exportAllData: props.options.exportAllData,\n        exportButton: props.options.exportButton,\n        exportDelimiter: props.options.exportDelimiter,\n        exportFileName: props.options.exportFileName,\n        exportCsv: props.options.exportCsv,\n        getFieldValue: this.dataManager.getFieldValue,\n        data: this.state.data,\n        renderData: this.state.renderData,\n        search: props.options.search,\n        showTitle: props.options.showTitle,\n        showTextRowsSelected: props.options.showTextRowsSelected,\n        toolbarButtonAlignment: props.options.toolbarButtonAlignment,\n        searchFieldAlignment: props.options.searchFieldAlignment,\n        searchText: this.state.searchText,\n        searchFieldStyle: props.options.searchFieldStyle,\n        title: props.title,\n        onSearchChanged: this.onSearchChange,\n        onColumnsChanged: this.onChangeColumnHidden,\n        localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.toolbar, this.props.localization.toolbar)\n      }), props.options.grouping && React.createElement(props.components.Groupbar, {\n        icons: props.icons,\n        localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.grouping, props.localization.grouping),\n        groupColumns: this.state.columns.filter(function (col) {\n          return col.tableData.groupOrder > -1;\n        }).sort(function (col1, col2) {\n          return col1.tableData.groupOrder - col2.tableData.groupOrder;\n        }),\n        onSortChanged: this.onChangeGroupOrder,\n        onGroupRemoved: this.onGroupRemoved\n      }), React.createElement(ScrollBar, {\n        \"double\": props.options.doubleHorizontalScroll\n      }, React.createElement(_reactBeautifulDnd.Droppable, {\n        droppableId: \"headers\",\n        direction: \"horizontal\"\n      }, function (provided, snapshot) {\n        return React.createElement(\"div\", {\n          ref: provided.innerRef\n        }, React.createElement(\"div\", {\n          style: {\n            maxHeight: props.options.maxBodyHeight,\n            overflowY: 'auto'\n          }\n        }, React.createElement(_Table[\"default\"], null, props.options.header && React.createElement(props.components.Header, {\n          localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.header, _this4.props.localization.header),\n          columns: _this4.state.columns,\n          hasSelection: props.options.selection,\n          headerStyle: props.options.headerStyle,\n          icons: props.icons,\n          selectedCount: _this4.state.selectedCount,\n          dataCount: props.parentChildData ? _this4.state.treefiedDataLength : _this4.state.data.length,\n          hasDetailPanel: !!props.detailPanel,\n          detailPanelColumnAlignment: props.options.detailPanelColumnAlignment,\n          showActionsColumn: props.actions && props.actions.filter(function (a) {\n            return !a.isFreeAction && !_this4.props.options.selection;\n          }).length > 0,\n          showSelectAllCheckbox: props.options.showSelectAllCheckbox,\n          orderBy: _this4.state.orderBy,\n          orderDirection: _this4.state.orderDirection,\n          onAllSelected: _this4.onAllSelected,\n          onOrderChange: _this4.onChangeOrder,\n          actionsHeaderIndex: props.options.actionsColumnIndex,\n          sorting: props.options.sorting,\n          grouping: props.options.grouping,\n          isTreeData: _this4.props.parentChildData !== undefined,\n          draggable: props.options.draggable\n        }), React.createElement(props.components.Body, {\n          actions: props.actions,\n          components: props.components,\n          icons: props.icons,\n          renderData: _this4.state.renderData,\n          currentPage: _this4.state.currentPage,\n          initialFormData: props.initialFormData,\n          pageSize: _this4.state.pageSize,\n          columns: _this4.state.columns,\n          detailPanel: props.detailPanel,\n          options: props.options,\n          getFieldValue: _this4.dataManager.getFieldValue,\n          isTreeData: _this4.props.parentChildData !== undefined,\n          onFilterChanged: _this4.onFilterChange,\n          onRowSelected: _this4.onRowSelected,\n          onToggleDetailPanel: _this4.onToggleDetailPanel,\n          onGroupExpandChanged: _this4.onGroupExpandChanged,\n          onTreeExpandChanged: _this4.onTreeExpandChanged,\n          onEditingCanceled: _this4.onEditingCanceled,\n          onEditingApproved: _this4.onEditingApproved,\n          localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.body, _this4.props.localization.body),\n          onRowClick: _this4.props.onRowClick,\n          showAddRow: _this4.state.showAddRow,\n          hasAnyEditingRow: !!(_this4.state.lastEditingRow || _this4.state.showAddRow),\n          hasDetailPanel: !!props.detailPanel,\n          treeDataMaxLevel: _this4.state.treeDataMaxLevel\n        }))), provided.placeholder);\n      })), (this.state.isLoading || props.isLoading) && props.options.loadingType === \"linear\" && React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          width: '100%'\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: '100%',\n          width: '100%'\n        }\n      }, React.createElement(_LinearProgress[\"default\"], null))), this.renderFooter(), (this.state.isLoading || props.isLoading) && props.options.loadingType === 'overlay' && React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: '100%',\n          width: '100%',\n          zIndex: 11\n        }\n      }, React.createElement(props.components.OverlayLoading, {\n        theme: props.theme\n      }))));\n    }\n  }]);\n  return MaterialTable;\n}(React.Component);\n\nexports[\"default\"] = MaterialTable;\n\nvar ScrollBar = function ScrollBar(_ref) {\n  var _double = _ref[\"double\"],\n      children = _ref.children;\n\n  if (_double) {\n    return React.createElement(_reactDoubleScrollbar[\"default\"], null, children);\n  } else {\n    return React.createElement(\"div\", {\n      style: {\n        overflowX: 'auto'\n      }\n    }, children);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}