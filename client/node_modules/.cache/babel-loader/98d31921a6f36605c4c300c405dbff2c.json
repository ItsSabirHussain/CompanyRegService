{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BaseBuilder_1 = __importDefault(require(\"../core/BaseBuilder\"));\n\nvar CsvBuilder =\n/** @class */\nfunction (_super) {\n  __extends(CsvBuilder, _super);\n\n  function CsvBuilder(fileName) {\n    var _this = _super.call(this) || this;\n\n    _this._FileName = '';\n    _this._Delimeter = ',';\n    _this._Columns = [];\n    _this._RowData = [];\n    _this._FileName = fileName;\n    return _this;\n  }\n\n  CsvBuilder.prototype.setColumns = function (columns) {\n    this._Columns = columns;\n    return this;\n  };\n\n  CsvBuilder.prototype.setDelimeter = function (delimeter) {\n    this._Delimeter = delimeter;\n    return this;\n  };\n\n  CsvBuilder.prototype.addRow = function (row) {\n    this._RowData.push(row);\n\n    return this;\n  };\n\n  CsvBuilder.prototype.addRows = function (rows) {\n    this._RowData = this._RowData.concat(rows);\n    return this;\n  };\n\n  CsvBuilder.prototype.escapeCell = function (cellData) {\n    if (typeof cellData === 'string') {\n      return '\"' + cellData.replace('\"', '\"\"') + '\"';\n    }\n\n    return cellData;\n  };\n\n  CsvBuilder.prototype.getRowData = function (row) {\n    return row.map(this.escapeCell).join(this._Delimeter);\n  };\n\n  CsvBuilder.prototype.exportFile = function () {\n    var _this = this;\n\n    var dataArray = [];\n\n    if (this._Columns && this._Columns.length > 0) {\n      dataArray.push(this.getRowData(this._Columns));\n    }\n\n    this._RowData.forEach(function (row) {\n      dataArray.push(_this.getRowData(row));\n    });\n\n    var csvContent = dataArray.join(\"\\r\\n\");\n\n    _super.prototype.exportFile.call(this, 'csv', this._FileName, csvContent);\n  };\n\n  return CsvBuilder;\n}(BaseBuilder_1.default);\n\nexports.default = CsvBuilder;","map":null,"metadata":{},"sourceType":"script"}